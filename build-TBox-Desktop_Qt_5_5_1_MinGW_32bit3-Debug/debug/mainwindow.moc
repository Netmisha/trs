/****************************************************************************
** Meta object code from reading C++ file 'mainwindow.cpp'
**
** Created by: The Qt Meta Object Compiler version 67 (Qt 5.5.1)
**
** WARNING! All changes made in this file will be lost!
*****************************************************************************/

#include <QtCore/qbytearray.h>
#include <QtCore/qmetatype.h>
#if !defined(Q_MOC_OUTPUT_REVISION)
#error "The header file 'mainwindow.cpp' doesn't include <QObject>."
#elif Q_MOC_OUTPUT_REVISION != 67
#error "This file was generated using the moc from 5.5.1. It"
#error "cannot be used with the include files from this version of Qt."
#error "(The moc has changed too much.)"
#endif

QT_BEGIN_MOC_NAMESPACE
struct qt_meta_stringdata_MainTree_t {
    QByteArrayData data[25];
    char stringdata0[205];
};
#define QT_MOC_LITERAL(idx, ofs, len) \
    Q_STATIC_BYTE_ARRAY_DATA_HEADER_INITIALIZER_WITH_OFFSET(len, \
    qptrdiff(offsetof(qt_meta_stringdata_MainTree_t, stringdata0) + ofs \
        - idx * sizeof(QByteArrayData)) \
    )
static const qt_meta_stringdata_MainTree_t qt_meta_stringdata_MainTree = {
    {
QT_MOC_LITERAL(0, 0, 8), // "MainTree"
QT_MOC_LITERAL(1, 9, 7), // "RunNext"
QT_MOC_LITERAL(2, 17, 0), // ""
QT_MOC_LITERAL(3, 18, 4), // "Load"
QT_MOC_LITERAL(4, 23, 4), // "path"
QT_MOC_LITERAL(5, 28, 7), // "getFile"
QT_MOC_LITERAL(6, 36, 8), // "FindTest"
QT_MOC_LITERAL(7, 45, 10), // "FindJSFile"
QT_MOC_LITERAL(8, 56, 12), // "getTestsName"
QT_MOC_LITERAL(9, 69, 12), // "getSuiteName"
QT_MOC_LITERAL(10, 82, 5), // "getJS"
QT_MOC_LITERAL(11, 88, 5), // "setJS"
QT_MOC_LITERAL(12, 94, 3), // "Run"
QT_MOC_LITERAL(13, 98, 6), // "RunOne"
QT_MOC_LITERAL(14, 105, 7), // "GetTags"
QT_MOC_LITERAL(15, 113, 4), // "Stop"
QT_MOC_LITERAL(16, 118, 10), // "setRootDir"
QT_MOC_LITERAL(17, 129, 10), // "AddNewTest"
QT_MOC_LITERAL(18, 140, 11), // "AddNewSuite"
QT_MOC_LITERAL(19, 152, 13), // "setCurrentTag"
QT_MOC_LITERAL(20, 166, 3), // "Set"
QT_MOC_LITERAL(21, 170, 3), // "Get"
QT_MOC_LITERAL(22, 174, 7), // "GetType"
QT_MOC_LITERAL(23, 182, 6), // "Remove"
QT_MOC_LITERAL(24, 189, 15) // "getCurrentIndex"

    },
    "MainTree\0RunNext\0\0Load\0path\0getFile\0"
    "FindTest\0FindJSFile\0getTestsName\0"
    "getSuiteName\0getJS\0setJS\0Run\0RunOne\0"
    "GetTags\0Stop\0setRootDir\0AddNewTest\0"
    "AddNewSuite\0setCurrentTag\0Set\0Get\0"
    "GetType\0Remove\0getCurrentIndex"
};
#undef QT_MOC_LITERAL

static const uint qt_meta_data_MainTree[] = {

 // content:
       7,       // revision
       0,       // classname
       0,    0, // classinfo
      22,   14, // methods
       0,    0, // properties
       0,    0, // enums/sets
       0,    0, // constructors
       0,       // flags
       0,       // signalCount

 // slots: name, argc, parameters, tag, flags
       1,    0,  124,    2, 0x0a /* Public */,
       3,    1,  125,    2, 0x0a /* Public */,
       5,    1,  128,    2, 0x0a /* Public */,
       6,    1,  131,    2, 0x0a /* Public */,
       7,    1,  134,    2, 0x0a /* Public */,
       8,    1,  137,    2, 0x0a /* Public */,
       9,    1,  140,    2, 0x0a /* Public */,
      10,    2,  143,    2, 0x0a /* Public */,
      11,    3,  148,    2, 0x0a /* Public */,
      12,    0,  155,    2, 0x0a /* Public */,
      13,    0,  156,    2, 0x0a /* Public */,
      14,    0,  157,    2, 0x0a /* Public */,
      15,    0,  158,    2, 0x0a /* Public */,
      16,    1,  159,    2, 0x0a /* Public */,
      17,    6,  162,    2, 0x0a /* Public */,
      18,    4,  175,    2, 0x0a /* Public */,
      19,    1,  184,    2, 0x0a /* Public */,
      20,    2,  187,    2, 0x0a /* Public */,
      21,    1,  192,    2, 0x0a /* Public */,
      22,    0,  195,    2, 0x0a /* Public */,
      23,    0,  196,    2, 0x0a /* Public */,
      24,    0,  197,    2, 0x0a /* Public */,

 // slots: parameters
    QMetaType::Void,
    QMetaType::Void, QMetaType::QString,    4,
    QMetaType::QString, QMetaType::QModelIndex,    2,
    QMetaType::QString, QMetaType::QModelIndex,    2,
    QMetaType::Void, QMetaType::QString,    2,
    QMetaType::QStringList, QMetaType::QString,    2,
    QMetaType::QString, QMetaType::QString,    2,
    QMetaType::QString, QMetaType::QString, QMetaType::QString,    2,    2,
    QMetaType::Void, QMetaType::QString, QMetaType::QString, QMetaType::QString,    2,    2,    2,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::QStringList,
    QMetaType::Void,
    QMetaType::Void, QMetaType::QString,    2,
    QMetaType::QString, QMetaType::QString, QMetaType::QString, QMetaType::QString, QMetaType::QString, QMetaType::QString, QMetaType::QString,    2,    2,    2,    2,    2,    2,
    QMetaType::QString, QMetaType::QString, QMetaType::QString, QMetaType::QString, QMetaType::QString,    2,    2,    2,    2,
    QMetaType::Void, QMetaType::QString,    2,
    QMetaType::Void, QMetaType::QString, QMetaType::QString,    2,    2,
    QMetaType::QString, QMetaType::QString,    2,
    QMetaType::QString,
    QMetaType::QString,
    QMetaType::QModelIndex,

       0        // eod
};

void MainTree::qt_static_metacall(QObject *_o, QMetaObject::Call _c, int _id, void **_a)
{
    if (_c == QMetaObject::InvokeMetaMethod) {
        MainTree *_t = static_cast<MainTree *>(_o);
        Q_UNUSED(_t)
        switch (_id) {
        case 0: _t->RunNext(); break;
        case 1: _t->Load((*reinterpret_cast< QString(*)>(_a[1]))); break;
        case 2: { QString _r = _t->getFile((*reinterpret_cast< QModelIndex(*)>(_a[1])));
            if (_a[0]) *reinterpret_cast< QString*>(_a[0]) = _r; }  break;
        case 3: { QString _r = _t->FindTest((*reinterpret_cast< QModelIndex(*)>(_a[1])));
            if (_a[0]) *reinterpret_cast< QString*>(_a[0]) = _r; }  break;
        case 4: _t->FindJSFile((*reinterpret_cast< QString(*)>(_a[1]))); break;
        case 5: { QStringList _r = _t->getTestsName((*reinterpret_cast< QString(*)>(_a[1])));
            if (_a[0]) *reinterpret_cast< QStringList*>(_a[0]) = _r; }  break;
        case 6: { QString _r = _t->getSuiteName((*reinterpret_cast< QString(*)>(_a[1])));
            if (_a[0]) *reinterpret_cast< QString*>(_a[0]) = _r; }  break;
        case 7: { QString _r = _t->getJS((*reinterpret_cast< QString(*)>(_a[1])),(*reinterpret_cast< QString(*)>(_a[2])));
            if (_a[0]) *reinterpret_cast< QString*>(_a[0]) = _r; }  break;
        case 8: _t->setJS((*reinterpret_cast< QString(*)>(_a[1])),(*reinterpret_cast< QString(*)>(_a[2])),(*reinterpret_cast< QString(*)>(_a[3]))); break;
        case 9: _t->Run(); break;
        case 10: _t->RunOne(); break;
        case 11: { QStringList _r = _t->GetTags();
            if (_a[0]) *reinterpret_cast< QStringList*>(_a[0]) = _r; }  break;
        case 12: _t->Stop(); break;
        case 13: _t->setRootDir((*reinterpret_cast< QString(*)>(_a[1]))); break;
        case 14: { QString _r = _t->AddNewTest((*reinterpret_cast< QString(*)>(_a[1])),(*reinterpret_cast< QString(*)>(_a[2])),(*reinterpret_cast< QString(*)>(_a[3])),(*reinterpret_cast< QString(*)>(_a[4])),(*reinterpret_cast< QString(*)>(_a[5])),(*reinterpret_cast< QString(*)>(_a[6])));
            if (_a[0]) *reinterpret_cast< QString*>(_a[0]) = _r; }  break;
        case 15: { QString _r = _t->AddNewSuite((*reinterpret_cast< QString(*)>(_a[1])),(*reinterpret_cast< QString(*)>(_a[2])),(*reinterpret_cast< QString(*)>(_a[3])),(*reinterpret_cast< QString(*)>(_a[4])));
            if (_a[0]) *reinterpret_cast< QString*>(_a[0]) = _r; }  break;
        case 16: _t->setCurrentTag((*reinterpret_cast< QString(*)>(_a[1]))); break;
        case 17: _t->Set((*reinterpret_cast< QString(*)>(_a[1])),(*reinterpret_cast< QString(*)>(_a[2]))); break;
        case 18: { QString _r = _t->Get((*reinterpret_cast< QString(*)>(_a[1])));
            if (_a[0]) *reinterpret_cast< QString*>(_a[0]) = _r; }  break;
        case 19: { QString _r = _t->GetType();
            if (_a[0]) *reinterpret_cast< QString*>(_a[0]) = _r; }  break;
        case 20: { QString _r = _t->Remove();
            if (_a[0]) *reinterpret_cast< QString*>(_a[0]) = _r; }  break;
        case 21: { QModelIndex _r = _t->getCurrentIndex();
            if (_a[0]) *reinterpret_cast< QModelIndex*>(_a[0]) = _r; }  break;
        default: ;
        }
    }
}

const QMetaObject MainTree::staticMetaObject = {
    { &QStandardItemModel::staticMetaObject, qt_meta_stringdata_MainTree.data,
      qt_meta_data_MainTree,  qt_static_metacall, Q_NULLPTR, Q_NULLPTR}
};


const QMetaObject *MainTree::metaObject() const
{
    return QObject::d_ptr->metaObject ? QObject::d_ptr->dynamicMetaObject() : &staticMetaObject;
}

void *MainTree::qt_metacast(const char *_clname)
{
    if (!_clname) return Q_NULLPTR;
    if (!strcmp(_clname, qt_meta_stringdata_MainTree.stringdata0))
        return static_cast<void*>(const_cast< MainTree*>(this));
    return QStandardItemModel::qt_metacast(_clname);
}

int MainTree::qt_metacall(QMetaObject::Call _c, int _id, void **_a)
{
    _id = QStandardItemModel::qt_metacall(_c, _id, _a);
    if (_id < 0)
        return _id;
    if (_c == QMetaObject::InvokeMetaMethod) {
        if (_id < 22)
            qt_static_metacall(this, _c, _id, _a);
        _id -= 22;
    } else if (_c == QMetaObject::RegisterMethodArgumentMetaType) {
        if (_id < 22)
            *reinterpret_cast<int*>(_a[0]) = -1;
        _id -= 22;
    }
    return _id;
}
QT_END_MOC_NAMESPACE
